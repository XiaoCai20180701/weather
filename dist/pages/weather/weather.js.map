{"version":3,"names":[],"mappings":"","sources":["pages/weather/weather.js"],"sourcesContent":["//index.js\nimport {\n  geocoder\n} from '../../lib/api'\nimport {\n  getWeather,\n  getAir\n} from '../../lib/api-mock'\n//获取应用实例\nconst app = getApp()\nlet isUpdate = false\nPage({\n  data: {\n    // 页面数据\n    statusBarHeight: 32,\n    backgroundImage: '../../images/cloud.jpg',\n    backgroundColor: '#62aadc',\n    current: {\n      temp: '0',\n      weather: '数据获取中',\n      humidity: '1',\n      icon: 'xiaolian'\n    },\n    today: {\n      temp: 'N/A',\n      weather: '暂无'\n    },\n    tomorrow: {\n      temp: 'N/A',\n      weather: '暂无'\n    },\n    // hourlyData\n    hourlyData: [],\n    city: '北京',\n    weeklyData: [],\n    width: 375,\n    scale: 1,\n    address: '定位中',\n    lat: 40.056974,\n    lon: 116.307689\n  },\n  getWeatherData(cb) {\n    wx.showLoading({\n      title: '获取数据中',\n      mask: true\n    })\n    const fail = (e) => {\n      wx.hideLoading()\n      if (typeof cb === 'function') {\n        cb()\n      }\n      // console.log(e.message, e)\n      wx.showToast({\n        title: '加载失败，请稍后再试',\n        icon: 'none',\n        duration: 3000\n      })\n    }\n    const { lat, lon, province, city, county } = this.data\n    getWeather(lat, lon)\n      .then((res) => {\n        wx.hideLoading()\n        if (typeof cb === 'function') {\n          cb()\n        }\n        console.log('获取天气数据', res.result)\n        if (res.result) {\n          this.render(res.result)\n        } else {\n          fail()\n        }\n      })\n      .catch(fail)\n    // 获取空气质量\n    getAir(city)\n      .then((res) => {\n        if (res && res.result) {\n          this.setData({\n            air: res.result\n          })\n        }\n      })\n      .catch((e) => { })\n    // 获取心情\n    // getMood(province, city, county, (res) => {\n    //   let result = (res.data || {}).data\n    //   if (result && result.tips) {\n    //     let tips = result.tips.observe\n    //     let index = Math.floor(Math.random() * Object.keys(tips).length)\n    //     tips = tips[index]\n    //     this.setData({ tips })\n    //   }\n    // })\n  },\n  // 处理逆经纬度\n  getAddress(lat, lon, name) {\n    wx.showLoading({\n      title: '定位中',\n      mask: true\n    })\n    let fail = (e) => {\n      // console.log(e)\n      this.setData({\n        address: name || '北京市海淀区西二旗北路'\n      })\n      wx.hideLoading()\n      this.getWeatherData()\n    }\n    geocoder(\n      lat,\n      lon,\n      (res) => {\n        wx.hideLoading()\n        let result = (res.data || {}).result\n        // console.log(1, res, result)\n        if (res.statusCode === 200 && result && result.address) {\n          let { address, formatted_addresses, address_component } = result\n          if (formatted_addresses && (formatted_addresses.recommend || formatted_addresses.rough)) {\n            address = formatted_addresses.recommend || formatted_addresses.rough\n          }\n          let { province, city, district: county } = address_component\n          this.setData({\n            province,\n            county,\n            city,\n            address: name || address\n          })\n          this.getWeatherData()\n        } else {\n          //失败\n          fail()\n        }\n      },\n      fail\n    )\n  },\n  updateLocation(res) {\n    let { latitude: lat, longitude: lon, name } = res\n    let data = {\n      lat,\n      lon\n    }\n    if (name) {\n      data.address = name\n    }\n    this.setData(data)\n    this.getAddress(lat, lon, name)\n  },\n  getLocation() {\n    wx.getLocation({\n      type: 'gcj02',\n      success: this.updateLocation,\n      fail: (e) => {\n        // console.log(e)\n        this.openLocation()\n      }\n    })\n  },\n  chooseLocation() {\n    wx.chooseLocation({\n      success: (res) => {\n        let { latitude, longitude } = res\n        let { lat, lon } = this.data\n        if (latitude == lat && lon == longitude) {\n          this.getWeatherData()\n        } else {\n          this.updateLocation(res)\n        }\n      }\n    })\n  },\n  openLocation() {\n    wx.showToast({\n      title: '检测到您未授权使用位置权限，请先开启哦',\n      icon: 'none',\n      duration: 3000\n    })\n  },\n  onLocation() {\n    wx.getSetting({\n      success: ({ authSetting }) => {\n        can = authSetting['scope.userLocation']\n        if (can) {\n          this.chooseLocation()\n        } else {\n          this.openLocation()\n        }\n      }\n    })\n  },\n  indexDetail(e) {\n    const { name, detail } = e.currentTarget.dataset\n    wx.showModal({\n      title: name,\n      content: detail,\n      showCancel: false\n    })\n  },\n  onLoad() {\n    wx.getSystemInfo({\n      success: (res) => {\n        let width = res.windowWidth\n        let scale = width / 375\n        // console.log(scale * res.statusBarHeight*2+24)\n        this.setData({\n          width,\n          scale,\n          paddingTop: res.statusBarHeight + 12\n        })\n      }\n    })\n    // return\n    // console.log(location, getCurrentPages())\n    const pages = getCurrentPages() //获取加载的页面\n    const currentPage = pages[pages.length - 1] //获取当前页面的对象\n    const query = currentPage.options\n    if (query && query.address && query.lat && query.lon) {\n      let { province, city, county, address, lat, lon } = query\n      this.setData(\n        {\n          city,\n          province,\n          county,\n          address,\n          lat,\n          lon\n        },\n        () => {\n          this.getWeatherData()\n        }\n      )\n    } else {\n      // 获取缓存数据\n      //   this.setDataFromCache()\n      this.getLocation()\n    }\n  },\n  onPullDownRefresh() {\n    this.getWeatherData(() => {\n      wx.stopPullDownRefresh()\n    })\n  },\n  //\n  render(data) {\n    isUpdate = true\n    console.log(\"render---------\", data)\n    const { width, scale } = this.data\n    const { current, lifeStyle, oneWord = '' } = data\n    const { backgroundColor, backgroundImage } = current\n    // const _today = daily[0],\n    //   _tomorrow = daily[1]\n    // const today = {\n    //   temp: `${_today.minTemp}/${_today.maxTemp}°`,\n    //   icon: _today.dayIcon,\n    //   weather: _today.day\n    // }\n    // const tomorrow = {\n    //   temp: `${_tomorrow.minTemp}/${_tomorrow.maxTemp}°`,\n    //   icon: _tomorrow.dayIcon,\n    //   weather: _tomorrow.day\n    // }\n    // daily.forEach((v) => {\n    //   v.time = v.time + 24 * 60 * 60 * 1000\n    // })\n    // console.log(hourly)\n    this.setData({\n      //  hourlyData: hourly,\n      //   weeklyData: daily,\n      current: current,\n      backgroundImage,\n      backgroundColor,\n        // today,\n        // tomorrow,\n      oneWord: oneWord,\n      lifeStyle: lifeStyle\n    })\n  },\n})"],"file":"weather.js"}