{"version":3,"names":[],"mappings":"","sources":["lib/api-mock.js"],"sourcesContent":["import Promise from './bluebird'\nconst QQ_MAP_KEY = 'ZVXBZ-D6JKU-4IRVY-2OHZB-RCSVK-LQFU6'\nconst KEY = '39a99e9fec4d47f8911a7be8235e29d1'\n// wx.cloud.init({\n//   env: 'hao-weather-2752f1'\n// })\n/**\n *  逆经纬度查询\n * @param {*} lat\n * @param {*} lon\n */\nexport const geocoder = (lat, lon, success = () => { }, fail = () => { }) => {\n  return wx.request({\n    url: 'https://apis.map.qq.com/ws/geocoder/v1/',\n    data: {\n      location: `${lat},${lon}`,\n      key: QQ_MAP_KEY,\n      get_poi: 0\n    },\n    success: success,\n    fail: fail\n  })\n  // return wx.cloud.callFunction({\n  //   name: 'geocoder',\n  //   data: {\n  //     lat,\n  //     lon\n  //   }\n  // })\n  //\n  // return $.request({\n  //   url: SERVER_URL + '/api/geocoder',\n  //   data: {\n  //     location: `${lat},${lon}`\n  //   }\n  // })\n}\nexport const getWeather = (lat, lon) => {\n  return new Promise((resolve, reject) => {\n    wx.request({\n      url: 'http://127.0.0.1:3000/api/he-weather' ,\n      data: {\n        lat,\n        lon\n      },\n      success: (res) => {\n        resolve({ result: res.data })\n      },\n      fail: (e) => {\n        reject(e)\n      }\n    })\n  })\n}\nexport const jscode2session = (code) => {\n  return new Promise((resolve, reject) => {\n    wx.request({\n      url: 'http://127.0.0.1:3000/api/jscode2session',\n      data: {\n        code\n      },\n      success: (res) => {\n        resolve({ result: res.data })\n      },\n      fail: reject\n    })\n  })\n}\nexport const getAir = (city) => {\n  return new Promise((resolve, reject) => {\n    wx.request({\n      url: 'http://127.0.0.1:3000/api/he-air',\n      data: {\n        city\n      },\n      success: (res) => {\n        resolve({ result: res.data })\n      },\n      fail: (e) => {\n        reject(e)\n      }\n    })\n  })\n}"],"file":"api-mock.js"}